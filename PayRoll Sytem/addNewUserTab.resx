<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="addUserBtn.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>